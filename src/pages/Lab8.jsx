import {
  Container,
  Typography,
  Grid,
  Card,
  CardContent,
  Box,
  Chip,
  Paper,
  useTheme,
  useMediaQuery,
  Alert,
  Button,
  Divider,
  Tab,
  Tabs,
  List,
  ListItem,
  ListItemIcon,
  ListItemText
} from '@mui/material';
import {
  TableChart,
  AdminPanelSettings,
  People,
  Feedback,
  Security,
  ViewColumn,
  DragIndicator,
  CheckCircle,
  Speed,
  PlayArrow,
  Code,
  DataArray,
  TouchApp,
  PhoneAndroid
} from '@mui/icons-material';
import { useState, useMemo } from 'react';
import { useSelector } from 'react-redux';
import { useNavigate } from 'react-router-dom';
import ReadOnlyFeedbackList from '../components/ReadOnlyFeedbackList';
import AdvancedDataTable from '../components/AdvancedDataTable';

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
const generateDemoData = (count = 20) => {
  const names = ['–ê–ª–µ–∫—Å–µ–π', '–ú–∞—Ä–∏—è', '–ò–≤–∞–Ω', '–ï–ª–µ–Ω–∞', '–î–º–∏—Ç—Ä–∏–π', '–ê–Ω–Ω–∞', '–°–µ—Ä–≥–µ–π', '–û–ª—å–≥–∞'];
  const surnames = ['–î–æ–¥–µ', '–ê—Ä—Ç–º–∞–Ω–µ', '–ó–æ—â–Ω–∫–æ', '–§—É—Ä—å–µ', '–õ–∞–Ω—Å–µ—Ä–µ', '–ú–æ—Ä–æ–∑–æ–≤', '–ö–ª–∏–º–µ–Ω–∫–æ', '–°–æ–∫–æ–ª–æ–≤–∏—á'];
  const domains = ['gmail.com', 'yandex.ru', 'mail.ru', 'outlook.com'];
  const roles = ['user', 'user', 'user', 'admin'];
  const statuses = ['active', 'active', 'active', 'blocked'];

  return Array.from({ length: count }, (_, i) => {
    const name = names[Math.floor(Math.random() * names.length)];
    const surname = surnames[Math.floor(Math.random() * surnames.length)];
    return {
      id: i + 1,
      name: `${name} ${surname}`,
      email: `${name.toLowerCase()}${i}@${domains[Math.floor(Math.random() * domains.length)]}`,
      role: roles[Math.floor(Math.random() * roles.length)],
      status: statuses[Math.floor(Math.random() * statuses.length)],
      createdAt: new Date(Date.now() - Math.random() * 90 * 24 * 60 * 60 * 1000).toISOString(),
      lastLogin: new Date(Date.now() - Math.random() * 7 * 24 * 60 * 60 * 1000).toISOString()
    };
  });
};

const features = [
  {
    title: 'React Table (@tanstack)',
    description: '–ú–æ—â–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ç–∞–±–ª–∏—Ü —Å —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π',
    icon: <TableChart />,
    status: '–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ',
    color: 'primary',
    details: ['–°–µ—Ä–≤–µ—Ä–Ω–∞—è –ø–∞–≥–∏–Ω–∞—Ü–∏—è', '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞', '–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫', '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–æ–ª–æ–Ω–∫–∞–º']
  },
  {
    title: '–°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π',
    description: '–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –º–µ–∂–¥—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏',
    icon: <Security />,
    status: '–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ',
    color: 'success',
    details: ['–†–æ–ª—å Admin (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø)', '–†–æ–ª—å User (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø)', '–°–µ—Ä–≤–µ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤', '–ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã']
  },
  {
    title: '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å',
    description: '–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Å –¥–∞—à–±–æ—Ä–¥–æ–º',
    icon: <AdminPanelSettings />,
    status: '–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ',
    color: 'secondary',
    details: ['Dashboard —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', '–ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤', '–ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏']
  },
  {
    title: 'Drag & Drop',
    description: '–ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ —Å –ø–æ–º–æ—â—å—é @dnd-kit',
    icon: <DragIndicator />,
    status: '–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ',
    color: 'info',
    details: ['–ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫', '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏', '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞', '–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –º–µ–Ω—é']
  },
  {
    title: '–í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è',
    description: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö',
    icon: <Speed />,
    status: '–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ',
    color: 'warning',
    details: ['React Virtual', '–õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞–º—è—Ç–∏', '–ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞']
  },
  {
    title: '–ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è',
    description: '–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤',
    icon: <PhoneAndroid />,
    status: '–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ',
    color: 'error',
    details: ['–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–µ—Ä–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞', '–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞', 'Touch-friendly –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å', '–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã']
  }
];

const adminFeatures = [
  '–ü–æ–ª–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º',
  '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
  '–°–∏—Å—Ç–µ–º–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤',
  '–ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
  '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–æ–∏—Å–∫ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è',
  '–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö',
  '–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
  'Dashboard —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π'
];

const userFeatures = [
  '–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤ –≤ —Ä–µ–∂–∏–º–µ "—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ"',
  '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã',
  '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è',
  '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
  '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö'
];

export default function Lab8() {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  const navigate = useNavigate();
  const { currentUser, isAuthenticated } = useSelector((state) => state.user);

  const [currentTab, setCurrentTab] = useState(0);
  const [demoData] = useState(() => generateDemoData(50));
  const [searchValue, setSearchValue] = useState('');

  const isAdmin = currentUser?.role === 'admin';

  // –ö–æ–ª–æ–Ω–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
  const demoColumns = useMemo(() => [
    {
      id: 'id',
      accessorKey: 'id',
      header: 'ID',
      size: 80,
      cell: ({ getValue }) => (
        <Chip label={`#${getValue()}`} size="small" variant="outlined" />
      )
    },
    {
      id: 'name',
      accessorKey: 'name',
      header: '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      cell: ({ getValue }) => (
        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
          <Typography variant="body2" fontWeight="medium">
            {getValue()}
          </Typography>
        </Box>
      )
    },
    {
      id: 'email',
      accessorKey: 'email',
      header: 'Email',
      cell: ({ getValue }) => (
        <Typography variant="body2" color="text.secondary">
          {getValue()}
        </Typography>
      )
    },
    {
      id: 'role',
      accessorKey: 'role',
      header: '–†–æ–ª—å',
      size: 120,
      cell: ({ getValue }) => (
        <Chip
          label={getValue() === 'admin' ? '–ê–¥–º–∏–Ω' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
          size="small"
          color={getValue() === 'admin' ? 'error' : 'primary'}
          icon={getValue() === 'admin' ? <AdminPanelSettings /> : <People />}
        />
      )
    },
    {
      id: 'status',
      accessorKey: 'status',
      header: '–°—Ç–∞—Ç—É—Å',
      size: 120,
      cell: ({ getValue }) => (
        <Chip
          label={getValue() === 'active' ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}
          size="small"
          color={getValue() === 'active' ? 'success' : 'error'}
          icon={getValue() === 'active' ? <CheckCircle /> : <Security />}
        />
      )
    },
    {
      id: 'createdAt',
      accessorKey: 'createdAt',
      header: '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
      cell: ({ getValue }) => (
        <Typography variant="body2">
          {new Date(getValue()).toLocaleDateString('ru-RU')}
        </Typography>
      )
    }
  ], []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö
  const filteredDemoData = useMemo(() => {
    if (!searchValue) return demoData;
    return demoData.filter(user =>
      user.name.toLowerCase().includes(searchValue.toLowerCase()) ||
      user.email.toLowerCase().includes(searchValue.toLowerCase())
    );
  }, [demoData, searchValue]);

  const handleTabChange = (event, newValue) => {
    setCurrentTab(newValue);
  };

  return (
    <Container maxWidth="xl" sx={{ py: 4, pb: isMobile ? 10 : 4 }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <Box sx={{ mb: 4 }}>
        <Typography variant="h4" gutterBottom>
          –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ8
        </Typography>
        <Typography variant="subtitle1" color="text.secondary" gutterBottom>
          React Table, —Å–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π –∏ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
        </Typography>

        {/* –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        {isAuthenticated && (
          <Alert
            severity={isAdmin ? "success" : "info"}
            sx={{ mt: 2 }}
            icon={isAdmin ? <AdminPanelSettings /> : <People />}
          >
            <Typography variant="body2" fontWeight="medium">
              –í–∞—à–∞ —Ä–æ–ª—å: {isAdmin ? 'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
              {isAdmin && ' - —É –≤–∞—Å –µ—Å—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è'}
            </Typography>
          </Alert>
        )}
      </Box>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <Paper sx={{ mb: 4 }}>
        <Tabs
          value={currentTab}
          onChange={handleTabChange}
          variant={isMobile ? "scrollable" : "fullWidth"}
          scrollButtons="auto"
        >
          <Tab label="–û–±–∑–æ—Ä –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π" icon={<DataArray />} />
          <Tab label="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã" icon={<TableChart />} />
          <Tab label="–û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" icon={<Feedback />} />
          {isAdmin && <Tab label="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø" icon={<AdminPanelSettings />} />}
        </Tabs>
      </Paper>

      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫ */}
      {currentTab === 0 && (
        <Box>
          {/* –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ */}
          <Typography variant="h5" gutterBottom sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 1 }}>
            <PlayArrow color="primary" />
            –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
          </Typography>

          <Grid container spacing={3} sx={{ mb: 6 }}>
            {features.map((feature, index) => (
              <Grid item xs={12} md={6} lg={4} key={index}>
                <Card
                  sx={{
                    height: '100%',
                    transition: 'all 0.3s',
                    '&:hover': {
                      transform: 'translateY(-4px)',
                      boxShadow: 4
                    }
                  }}
                >
                  <CardContent>
                    <Box sx={{ textAlign: 'center', mb: 2 }}>
                      <Box sx={{ color: `${feature.color}.main`, mb: 2, fontSize: '3rem' }}>
                        {feature.icon}
                      </Box>
                      <Typography variant="h6" gutterBottom>
                        {feature.title}
                      </Typography>
                      <Typography variant="body2" color="text.secondary" paragraph>
                        {feature.description}
                      </Typography>
                      <Chip
                        label={feature.status}
                        color="success"
                        size="small"
                        icon={<CheckCircle />}
                      />
                    </Box>

                    <Divider sx={{ my: 2 }} />

                    <List dense>
                      {feature.details.map((detail, idx) => (
                        <ListItem key={idx} sx={{ px: 0 }}>
                          <ListItemIcon sx={{ minWidth: 36 }}>
                            <CheckCircle color="success" fontSize="small" />
                          </ListItemIcon>
                          <ListItemText
                            primary={
                              <Typography variant="body2">
                                {detail}
                              </Typography>
                            }
                          />
                        </ListItem>
                      ))}
                    </List>
                  </CardContent>
                </Card>
              </Grid>
            ))}
          </Grid>

          {/* –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫ */}
          <Paper sx={{ p: 3, mb: 4, bgcolor: 'primary.light', color: 'primary.contrastText' }}>
            <Typography variant="h6" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
              <Code />
              –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫
            </Typography>

            <Typography variant="body2" paragraph>
              <strong>@tanstack/react-table:</strong> –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–æ—â–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
              —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
            </Typography>

            <Typography variant="body2" paragraph>
              <strong>@dnd-kit:</strong> –ú–æ–¥—É–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ drag & drop –¥–ª—è React —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
              accessibility –∏ –º–æ—â–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
            </Typography>

            <Typography variant="body2" paragraph>
              <strong>@tanstack/react-virtual:</strong> –í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–æ–≤ –∏ —Ç–∞–±–ª–∏—Ü –¥–ª—è
              –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–æ–ª—å—à–∏–º–∏ –æ–±—ä–µ–º–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.
            </Typography>

            <Typography variant="body2">
              <strong>Material-UI + Redux Toolkit:</strong> –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π UI Kit —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
              –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏ —á–µ—Ä–µ–∑ RTK Query.
            </Typography>

            <Box sx={{ mt: 3, display: 'flex', gap: 1, flexWrap: 'wrap' }}>
              {[
                '@tanstack/react-table',
                '@dnd-kit/core',
                '@tanstack/react-virtual',
                'Redux Toolkit',
                'Material-UI',
                'React Router',
                'Role-based Access'
              ].map((tech) => (
                <Chip
                  key={tech}
                  label={tech}
                  variant="outlined"
                  size="small"
                  sx={{
                    color: 'primary.contrastText',
                    borderColor: 'primary.contrastText'
                  }}
                />
              ))}
            </Box>
          </Paper>
        </Box>
      )}

      {currentTab === 1 && (
        <Box>
          <Typography variant="h5" gutterBottom sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 1 }}>
            <TableChart color="primary" />
            –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Ç–∞–±–ª–∏—Ü—ã
          </Typography>

          <Alert severity="info" sx={{ mb: 3 }}>
            <Typography variant="body2" paragraph>
              <strong>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</strong>
            </Typography>
            <Typography variant="body2" component="div">
              ‚Ä¢ <strong>–ü–æ–∏—Å–∫:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö<br/>
              ‚Ä¢ <strong>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</strong> –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏<br/>
              ‚Ä¢ <strong>Drag & Drop:</strong> –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–π—Ç–µ –∏–∫–æ–Ω–∫–∏ —Ä—è–¥–æ–º —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∫–æ–ª–æ–Ω–æ–∫<br/>
              ‚Ä¢ <strong>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–æ–Ω–æ–∫:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è/–ø–æ–∫–∞–∑–∞ –∫–æ–ª–æ–Ω–æ–∫<br/>
              ‚Ä¢ <strong>–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è:</strong> –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –ø–µ—Ä–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞
            </Typography>
          </Alert>

          <AdvancedDataTable
            title={`–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (${filteredDemoData.length})`}
            data={filteredDemoData}
            columns={demoColumns}
            loading={false}
            totalCount={filteredDemoData.length}
            page={0}
            pageSize={10}
            onSearchChange={setSearchValue}
            searchValue={searchValue}
            virtualScrolling={filteredDemoData.length > 20}
            fixedFirstColumn={isMobile}
          />
        </Box>
      )}

      {currentTab === 2 && (
        <Box>
          <Typography variant="h5" gutterBottom sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 1 }}>
            <Feedback color="primary" />
            –°–∏—Å—Ç–µ–º–∞ –æ—Ç–∑—ã–≤–æ–≤
          </Typography>

          {!isAdmin && (
            <Alert severity="info" sx={{ mb: 3 }}>
              <Typography variant="body2">
                <strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ä–µ–∂–∏–º:</strong> –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –æ—Ç–∑—ã–≤—ã.
                –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
              </Typography>
            </Alert>
          )}

          <ReadOnlyFeedbackList />
        </Box>
      )}

      {currentTab === 3 && isAdmin && (
        <Box>
          <Typography variant="h5" gutterBottom sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 1 }}>
            <AdminPanelSettings color="primary" />
            –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
          </Typography>

          <Grid container spacing={3} sx={{ mb: 4 }}>
            <Grid item xs={12} md={6}>
              <Card>
                <CardContent>
                  <Typography variant="h6" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                    <People />
                    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
                  </Typography>
                  <Typography variant="body2" color="text.secondary" paragraph>
                    –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Ç–∞–±–ª–∏—Ü–µ–π
                  </Typography>
                  <List dense>
                    {adminFeatures.slice(0, 4).map((feature, idx) => (
                      <ListItem key={idx} sx={{ px: 0 }}>
                        <ListItemIcon sx={{ minWidth: 36 }}>
                          <CheckCircle color="success" fontSize="small" />
                        </ListItemIcon>
                        <ListItemText
                          primary={
                            <Typography variant="body2">
                              {feature}
                            </Typography>
                          }
                        />
                      </ListItem>
                    ))}
                  </List>
                  <Button
                    variant="contained"
                    startIcon={<People />}
                    onClick={() => navigate('/admin/users')}
                    fullWidth
                  >
                    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
                  </Button>
                </CardContent>
              </Card>
            </Grid>

            <Grid item xs={12} md={6}>
              <Card>
                <CardContent>
                  <Typography variant="h6" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                    <Feedback />
                    –ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤
                  </Typography>
                  <Typography variant="body2" color="text.secondary" paragraph>
                    –°–∏—Å—Ç–µ–º–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                  </Typography>
                  <List dense>
                    {adminFeatures.slice(4, 8).map((feature, idx) => (
                      <ListItem key={idx} sx={{ px: 0 }}>
                        <ListItemIcon sx={{ minWidth: 36 }}>
                          <CheckCircle color="success" fontSize="small" />
                        </ListItemIcon>
                        <ListItemText
                          primary={
                            <Typography variant="body2">
                              {feature}
                            </Typography>
                          }
                        />
                      </ListItem>
                    ))}
                  </List>
                  <Button
                    variant="contained"
                    color="secondary"
                    startIcon={<Feedback />}
                    onClick={() => navigate('/admin/feedbacks')}
                    fullWidth
                  >
                    –ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤
                  </Button>
                </CardContent>
              </Card>
            </Grid>

            <Grid item xs={12}>
              <Card>
                <CardContent>
                  <Typography variant="h6" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                    <AdminPanelSettings />
                    –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                  </Typography>
                  <Typography variant="body2" color="text.secondary" paragraph>
                    –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∏ –±—ã—Å—Ç—Ä—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
                  </Typography>
                  <Button
                    variant="contained"
                    color="info"
                    startIcon={<AdminPanelSettings />}
                    onClick={() => navigate('/admin')}
                    size="large"
                  >
                    –û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
                  </Button>
                </CardContent>
              </Card>
            </Grid>
          </Grid>
        </Box>
      )}

      {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <Alert severity="info" sx={{ mt: 4 }}>
        <Typography variant="body2" fontWeight="bold" gutterBottom>
          üí° –ö–∞–∫ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
        </Typography>
        <Typography variant="body2" component="div">
          <strong>–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:</strong> –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ admin/admin123 –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è<br/>
          <strong>–î–µ–º–æ —Ç–∞–±–ª–∏—Ü–∞:</strong> –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–∏—Å–∫, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É, drag&drop –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–æ–ª–æ–Ω–æ–∫<br/>
          <strong>–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è:</strong> –£–º–µ–Ω—å—à–∏—Ç–µ –æ–∫–Ω–æ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏<br/>
          <strong>–í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è:</strong> –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –¥–ª—è —Ç–∞–±–ª–∏—Ü —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å—Ç—Ä–æ–∫
        </Typography>
      </Alert>
    </Container>
  );
}
